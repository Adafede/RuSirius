% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sirius.R
\name{Sirius}
\alias{Sirius}
\alias{show,Sirius-method}
\title{Connection to a Sirius instance}
\usage{
Sirius(
  username = character(),
  password = character(),
  projectId = character(),
  path = character(),
  verbose = FALSE
)

\S4method{show}{Sirius}(object)
}
\arguments{
\item{username}{\code{character(1)}, the username to use for the connection}

\item{password}{\code{character(1)}, the password to use for the connection}

\item{projectId}{\code{character(1)}, the project id to use for the connection}

\item{path}{\code{character(1)} path where to find the existing project or where
to create a new one.By default, the porject will be opened in the
current \code{"."} directory.}

\item{verbose}{\code{logical(1)}, if \code{TRUE} the function will print all messages
to the console. Use if need debug, default is \code{FALSE}.}

\item{object}{\code{Sirius}, the object to show,}
}
\value{
\code{Sirius} object with the Sirius api connected.
}
\description{
Creates a \code{Sirius} instance and checks that connection to the server
is valid. returns the Api and SDK within its slots.
Main object that the user will interact with to connect to the Sirius server
and perform operations.

Creates a \code{Sirius} object and checks that the connection to the
Sirius server is valid. If the Sirius server is not running, the function
will attempt to start it using the provided path to the executable. If the
connection is not valid, the function will attempt to log in using the
provided credentials. If the connection is still not valid, the function
will stop with an error message.
}
\section{Slots}{

\describe{
\item{\code{api}}{\code{ANY}, the api object to use for the connection}

\item{\code{sdk}}{\code{ANY}, the sdk object to use for the connection}

\item{\code{projectId}}{\code{character}, the project id to use for the connection}

\item{\code{featureMap}}{\code{data.frame}, the feature map to use for the connection}
}}

\author{
Philippine Louail (+people that worked on the API)
}
